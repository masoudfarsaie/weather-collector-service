package com.assignment.spring.web.api;

import com.assignment.spring.web.model.ErrorResponseDto;
import com.assignment.spring.web.model.WeatherResponseDto;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;


/**
 * The Weather Api specification that is generated by code-first approach.
 */
@Tag(name = "Weather API", description = "Api to get weather information of a city")
public interface WeatherControllerApi {

    @Operation(summary = "Get weather information of a city")
    @ApiResponses({
        @ApiResponse(responseCode = "200", description = "Weather Info",
            content = @Content(schema = @Schema(name = "Response", implementation = WeatherResponseDto.class))),
        @ApiResponse(responseCode = "404", description = "Weather not found",
                    content = @Content),
        @ApiResponse(responseCode = "422", description = "Business Error",
                content = @Content(schema = @Schema(name = "Error", implementation = ErrorResponseDto.class)))
    })
    @RequestMapping(method = RequestMethod.GET, value = "/weather", produces = {"application/json"})
    ResponseEntity<WeatherResponseDto> weather(
            @Parameter(description = "city id") @RequestParam(name = "city") String city);

}
